{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nlet AddUserComponent = class AddUserComponent {\n  constructor(crudApi, fb, toastr, CategoryService, router, data, dialogRef) {\n    this.crudApi = crudApi;\n    this.fb = fb;\n    this.toastr = toastr;\n    this.CategoryService = CategoryService;\n    this.router = router;\n    this.data = data;\n    this.dialogRef = dialogRef;\n  }\n\n  get f() {\n    return this.crudApi.formData.controls;\n  }\n\n  ngOnInit() {\n    if (this.crudApi.choixmenu == \"A\") {\n      this.InfoForm();\n    }\n\n    this.CategoryService.getAll().subscribe(response => {\n      this.CategoryService.list = response[\"hydra:member\"];\n    });\n  } //validator\n\n\n  InfoForm() {\n    this.crudApi.formData = this.fb.group({\n      id: null,\n      groupeName: ['', [Validators.required]],\n      origin: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      date_start: ['', [Validators.required]],\n      date_separation: ['', [Validators.required]],\n      founders: ['', [Validators.required]],\n      members: ['', [Validators.required]],\n      musicType: ['', [Validators.required]],\n      description: ['', [Validators.required]]\n    });\n  }\n\n  resetForm() {\n    this.crudApi.formData.reset();\n  }\n\n  onSubmit() {\n    this.crudApi.choixmenu == \"A\" ? this.addData() : this.updateData();\n  }\n\n  lister() {\n    this.router.navigate(['/users']);\n  }\n\n  addData() {\n    this.crudApi.formData.value.category = String(\"/api/categories/\" + this.crudApi.formData.value.category);\n    this.crudApi.createData(this.crudApi.formData.value).subscribe(data => {\n      this.dialogRef.close();\n      this.data = data;\n      this.crudApi.categoryid = String(\"/api/users/\" + this.data.id);\n      this.toastr.success('articles ajoutÃ©e avec Succes');\n      this.crudApi.getAll().subscribe(response => {\n        this.crudApi.list = response[\"hydra:member\"];\n      });\n    });\n  }\n\n  updateData() {\n    // en cas de fk\n    this.crudApi.formData.value.category = String(\"/api/categories/\" + this.crudApi.formData.value.category); // si on enleve le string (.. on obtient l'id de categories 1,2 ..\n\n    this.crudApi.updatedata(this.crudApi.formData.value.id, this.crudApi.formData.value).subscribe(data => {\n      this.toastr.success('Modification faite avec Success');\n      this.dialogRef.close();\n      this.crudApi.getAll().subscribe(response => {\n        this.crudApi.list = response[\"hydra:member\"];\n      });\n      this.router.navigate(['/articles']);\n    });\n  }\n\n  onChange($event) {}\n\n};\nAddUserComponent = __decorate([Component({\n  selector: 'app-add-article',\n  templateUrl: './add-article.component.html',\n  styles: []\n}), __param(5, Inject(MAT_DIALOG_DATA))], AddUserComponent);\nexport { AddUserComponent };","map":null,"metadata":{},"sourceType":"module"}